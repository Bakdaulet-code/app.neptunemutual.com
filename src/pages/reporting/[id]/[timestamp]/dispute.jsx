import Head from "next/head";
import { useRouter } from "next/router";
import { useFetchReport } from "@/src/hooks/useFetchReport";
import { toBytes32 } from "@/src/helpers/cover";
import { NewDisputeReportForm } from "@/components/reporting/NewDisputeReportForm";
import { useCoverInfo } from "@/src/hooks/useCoverInfo";
import { ReportingHero } from "@/components/UI/organisms/reporting/new/ReportingHero";
import { Container } from "@/components/UI/atoms/container";

export default function DisputeFormPage() {
  const router = useRouter();
  const { id: report_id_parsed, timestamp } = router.query;

  let report_id = toBytes32(report_id_parsed) + "-" + timestamp;
  const { data, loading } = useFetchReport(report_id);

  const coverKey = toBytes32(report_id_parsed);
  const { coverInfo } = useCoverInfo(coverKey);

  return (
    <main>
      <Head>
        <title>Neptune Mutual</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      {loading && <p className="text-center">Loading...</p>}

      {!data.incidentReport && <p className="text-center">No data found</p>}

      {data.incidentReport &&
        data?.incidentReport?.totalRefutedCount !== "0" && (
          <p>Not applicable for disputing</p>
        )}

      {data.incidentReport && (
        <>
          {/* hero */}
          <ReportingHero
            coverInfo={coverInfo}
            reportStatus={{
              resolved: data.incidentReport.resolved,
              dispute: true,
            }}
          />

          {/* <hr className="border-b border-B0C4DB" /> */}

          <Container className="py-16">
            <NewDisputeReportForm incidentReport={data.incidentReport} />
          </Container>
        </>
      )}
    </main>
  );
}
